{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anish\\\\Documents\\\\Projects\\\\pathfinding\\\\src\\\\PathFinder\\\\Node.js\";\nimport React, { Component } from \"react\";\nimport \"./Node.css\";\n\nclass Node extends Component {\n  constructor() {\n    super();\n\n    this.onMouseDown = (e, node) => {\n      console.log(e.target.className);\n      this.setState({\n        isMouseDown: true,\n        isMouseUp: false\n      });\n    };\n\n    this.onMouseUp = (e, node) => {\n      console.log(e.target.className);\n      this.setState({\n        isMouseUp: true,\n        isMouseDown: false\n      });\n    };\n\n    this.onMouseMove = () => {\n      this.setState({\n        didMouseMove: true\n      });\n    };\n\n    this.onMouseEnter = () => {\n      this.setState({\n        didMouseEnter: true\n      });\n    };\n\n    this.onMouseLeave = () => {\n      this.setState({\n        didMouseLeave: true,\n        didMouseEnter: false\n      });\n    };\n\n    this.onDragStart = (e, node) => {\n      e.dataTransfer.setData(\"text\", \"node-\".concat(node.props.column, \"-\").concat(node.props.row));\n    };\n\n    this.onDrop = (e, node) => {\n      const _this$props = this.props,\n            changeStartNode = _this$props.changeStartNode,\n            changeEndNode = _this$props.changeEndNode,\n            resetCSS = _this$props.resetCSS; //id of the 'soon to be previous' startNode/endNode, current startNode/endNode that will be previous after drag n drop\n\n      let data = e.dataTransfer.getData(\"text\");\n\n      if (document.getElementById(data).className === \"nodestart\") {\n        document.querySelector(\".nodestart\").className = \"node\";\n        document.getElementById(\"node-\".concat(node.props.column, \"-\").concat(node.props.row)).className = \"nodestart\";\n        changeStartNode(node);\n      }\n\n      if (document.getElementById(data).className === \"nodefinish\") {\n        document.querySelector(\".nodefinish\").className = \"node\";\n        document.getElementById(\"node-\".concat(node.props.column, \"-\").concat(node.props.row)).className = \"nodefinish\";\n        changeEndNode(node);\n      }\n\n      resetCSS();\n    };\n\n    this.onDragOver = e => {\n      e.preventDefault();\n    };\n\n    this.state = {\n      isMouseUp: true,\n      isMouseDown: false,\n      didMouseEnter: false,\n      didMouseMove: false,\n      didMouseLeave: false\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          column = _this$props2.column,\n          row = _this$props2.row,\n          isStart = _this$props2.isStart,\n          isFinish = _this$props2.isFinish,\n          isWall = _this$props2.isWall;\n    const extraClassName = isFinish ? \"finish\" : isStart ? \"start\" : isWall ? \"node-wall\" : \"\";\n    return React.createElement(\"div\", {\n      draggable: \"true\",\n      id: \"node-\".concat(column, \"-\").concat(row),\n      className: \"node\".concat(extraClassName),\n      onDragStart: e => this.onDragStart(e, this),\n      onDragOver: e => this.onDragOver(e),\n      onDrop: e => this.onDrop(e, this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Node;","map":{"version":3,"sources":["C:/Users/Anish/Documents/Projects/pathfinding/src/PathFinder/Node.js"],"names":["React","Component","Node","constructor","onMouseDown","e","node","console","log","target","className","setState","isMouseDown","isMouseUp","onMouseUp","onMouseMove","didMouseMove","onMouseEnter","didMouseEnter","onMouseLeave","didMouseLeave","onDragStart","dataTransfer","setData","props","column","row","onDrop","changeStartNode","changeEndNode","resetCSS","data","getData","document","getElementById","querySelector","onDragOver","preventDefault","state","render","isStart","isFinish","isWall","extraClassName"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Node.css\";\r\n\r\nclass Node extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isMouseUp: true,\r\n      isMouseDown: false,\r\n      didMouseEnter: false,\r\n      didMouseMove: false,\r\n      didMouseLeave: false,\r\n    };\r\n  }\r\n  onMouseDown = (e, node) => {\r\n    console.log(e.target.className);\r\n    this.setState({ isMouseDown: true, isMouseUp: false });\r\n  };\r\n  onMouseUp = (e, node) => {\r\n    console.log(e.target.className);\r\n    this.setState({ isMouseUp: true, isMouseDown: false });\r\n  };\r\n  onMouseMove = () => {\r\n    this.setState({ didMouseMove: true });\r\n  };\r\n  onMouseEnter = () => {\r\n    this.setState({ didMouseEnter: true });\r\n  };\r\n  onMouseLeave = () => {\r\n    this.setState({ didMouseLeave: true, didMouseEnter: false });\r\n  };\r\n  onDragStart = (e, node) => {\r\n    e.dataTransfer.setData(\r\n      \"text\",\r\n      `node-${node.props.column}-${node.props.row}`\r\n    );\r\n  };\r\n  onDrop = (e, node) => {\r\n    const { changeStartNode, changeEndNode, resetCSS } = this.props;\r\n    //id of the 'soon to be previous' startNode/endNode, current startNode/endNode that will be previous after drag n drop\r\n    let data = e.dataTransfer.getData(\"text\");\r\n    if (document.getElementById(data).className === \"nodestart\") {\r\n      document.querySelector(`.nodestart`).className = \"node\";\r\n      document.getElementById(\r\n        `node-${node.props.column}-${node.props.row}`\r\n      ).className = \"nodestart\";\r\n      changeStartNode(node);\r\n    }\r\n    if (document.getElementById(data).className === \"nodefinish\") {\r\n      document.querySelector(`.nodefinish`).className = \"node\";\r\n      document.getElementById(\r\n        `node-${node.props.column}-${node.props.row}`\r\n      ).className = \"nodefinish\";\r\n      changeEndNode(node);\r\n    }\r\n    resetCSS();\r\n  };\r\n\r\n  // NEED TO CHANGE THE PROPS OF THE NEW NODES AS START AND END AFTER THE DRAG\r\n\r\n  onDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  render() {\r\n    const { column, row, isStart, isFinish, isWall } = this.props;\r\n    const extraClassName = isFinish\r\n      ? \"finish\"\r\n      : isStart\r\n      ? \"start\"\r\n      : isWall\r\n      ? \"node-wall\"\r\n      : \"\";\r\n    return (\r\n      <div\r\n        draggable=\"true\"\r\n        id={`node-${column}-${row}`}\r\n        className={`node${extraClassName}`}\r\n        onDragStart={(e) => this.onDragStart(e, this)}\r\n        onDragOver={(e) => this.onDragOver(e)}\r\n        onDrop={(e) => this.onDrop(e, this)}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Node;\r\n"]},"metadata":{},"sourceType":"module"}