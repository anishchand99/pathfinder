{"ast":null,"code":"export function shortestPath(startNode, endNode) {\n  let shortestPath = [];\n  let currentNode = endNode;\n\n  while (currentNode !== null) {\n    shortestPath.push(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n\n  return shortestPath.reverse();\n}","map":{"version":3,"sources":["C:/Users/Anish/Documents/PROJECTS/pathfinding/pathfinder/src/algorithms/getShortestPath.js"],"names":["shortestPath","startNode","endNode","currentNode","push","previousNode","reverse"],"mappings":"AAAA,OAAO,SAASA,YAAT,CAAsBC,SAAtB,EAAiCC,OAAjC,EAA0C;AAC/C,MAAIF,YAAY,GAAG,EAAnB;AACA,MAAIG,WAAW,GAAGD,OAAlB;;AACA,SAAOC,WAAW,KAAK,IAAvB,EAA6B;AAC3BH,IAAAA,YAAY,CAACI,IAAb,CAAkBD,WAAlB;AACAA,IAAAA,WAAW,GAAGA,WAAW,CAACE,YAA1B;AACD;;AACD,SAAOL,YAAY,CAACM,OAAb,EAAP;AACD","sourcesContent":["export function shortestPath(startNode, endNode) {\r\n  let shortestPath = [];\r\n  let currentNode = endNode;\r\n  while (currentNode !== null) {\r\n    shortestPath.push(currentNode);\r\n    currentNode = currentNode.previousNode;\r\n  }\r\n  return shortestPath.reverse();\r\n}\r\n"]},"metadata":{},"sourceType":"module"}